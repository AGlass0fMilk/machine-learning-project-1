Python 3.4.3 (default, Aug 26 2015, 09:33:17) 
[GCC 5.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import numpy as np
>>> A = np.arange(9)
>>> np.reshape(A, [3,3])
array([[0, 1, 2],
       [3, 4, 5],
       [6, 7, 8]])
>>> A
array([0, 1, 2, 3, 4, 5, 6, 7, 8])
>>> A =np.reshape(A, [3,3])
>>> A
array([[0, 1, 2],
       [3, 4, 5],
       [6, 7, 8]])
>>> B = A + 4
>>> B
array([[ 4,  5,  6],
       [ 7,  8,  9],
       [10, 11, 12]])
>>> 1/(1 + np.exp(A))
array([[  5.00000000e-01,   2.68941421e-01,   1.19202922e-01],
       [  4.74258732e-02,   1.79862100e-02,   6.69285092e-03],
       [  2.47262316e-03,   9.11051194e-04,   3.35350130e-04]])
>>> A
array([[0, 1, 2],
       [3, 4, 5],
       [6, 7, 8]])
>>> B
array([[ 4,  5,  6],
       [ 7,  8,  9],
       [10, 11, 12]])
>>> p = range(A.shape[0])
>>> p
range(0, 3)
>>> p = np.random.permutation(p)
>>> p
array([2, 0, 1])
>>> b = range(A.shape[1])
>>> b
range(0, 3)
>>> A1 = A[p[0:1000], :]
>>> A1
array([[6, 7, 8],
       [0, 1, 2],
       [3, 4, 5]])
>>> A2 = A[p[1000:],:]
>>> A2
array([], shape=(0, 3), dtype=int64)
>>> A1 = A[p[0:1], :]
>>> A1
array([[6, 7, 8]])
>>> A2 = A[p[1:],:]
>>> A2
array([[0, 1, 2],
       [3, 4, 5]])
>>> B1 = B[p[0:1],:]
>>> B1
array([[10, 11, 12]])
>>> A
array([[0, 1, 2],
       [3, 4, 5],
       [6, 7, 8]])
>>> B
array([[ 4,  5,  6],
       [ 7,  8,  9],
       [10, 11, 12]])
>>> B2 = B[p[1:],:]
>>> B2
array([[4, 5, 6],
       [7, 8, 9]])
>>> A
array([[0, 1, 2],
       [3, 4, 5],
       [6, 7, 8]])
>>> B
array([[ 4,  5,  6],
       [ 7,  8,  9],
       [10, 11, 12]])
>>> A1
array([[6, 7, 8]])
>>> A2
array([[0, 1, 2],
       [3, 4, 5]])
>>> B1
array([[10, 11, 12]])
>>> B2
array([[4, 5, 6],
       [7, 8, 9]])
>>> k = 10
>>> out = np.zeros(k)
>>> out
array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])
>>> out[4] = 1
>>> out
array([ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.])
>>> 

